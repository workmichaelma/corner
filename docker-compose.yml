version: "3"

services:
  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    volumes:
      - ./app:/usr/src/app/corner/app
    ports:
      - "8098:3000"
      - "80:3000"
    restart: always
    depends_on:
      - graphql
    networks:
      - corner-networks
    environment:
      - TZ=Asia/Hong_Kong
    command: sh -c "npm install --legacy-peer-deps && npm run dev"

  # mongo:
  #   container_name: corner_mongo
  #   image: mongo
  #   ports:
  #     - "27017:27017"
  #   volumes:
  #     - ./mongo:/usr/src/app/corner/mongo
  #   networks:
  #     - corner-networks
  #   environment:
  #     - TZ=Asia/Hong_Kong
  crawler:
    restart: always
    build: ./crawler
    command: sh -c "npm install && npm run start"
    working_dir: /usr/src/app/corner/crawler
    ports:
      - "2002:8082"
    volumes:
      - ./crawler:/usr/src/app/corner/crawler
    networks:
      - corner-networks
    environment:
      - TZ=Asia/Hong_Kong
  api:
    restart: always
    build: ./api
    command: sh -c "npm install && npm run start"
    working_dir: /usr/src/app/corner/api
    ports:
      - "2003:8083"
    volumes:
      - ./api:/usr/src/app/corner/api
    networks:
      - corner-networks
    environment:
      production: "true"
      # WAIT_HOSTS: mongo:27017

  graphql:
    restart: always
    build: ./graphql
    command: sh -c "npm install && npm run start"
    working_dir: /usr/src/app/corner/graphql
    ports:
      - "2004:8084"
    volumes:
      - ./graphql:/usr/src/app/corner/graphql
    networks:
      - corner-networks
    environment:
      production: "true"
  # environment:
  #   WAIT_HOSTS: mongo:27017

  redis:
    restart: always
    container_name: redis
    image: redis:alpine
    user: root
    ports:
      - 6379:6379
    volumes:
      - ./data/redis-data:/usr/src/app/data
    networks:
      - corner-networks

networks:
  corner-networks:
    driver: bridge
